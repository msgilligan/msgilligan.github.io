name: Gradle Build

on:
  # Runs on pushes targeting the default branch (currently `source`)
  push:
    branches: [$default-branch]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        java: ['11']
        distribution: ['temurin']
      fail-fast: false
    name: ${{ matrix.os }} JDK ${{ matrix.java }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: ${{ matrix.distribution }}
        java-version: ${{ matrix.java }}
    - name: Verify Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Build with Gradle
      run: ./gradlew bake --info --stacktrace
    - name: Upload Github Pages Artifact
      uses: actions/upload-pages-artifact@v1
      with:
          path: build/jbake

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
